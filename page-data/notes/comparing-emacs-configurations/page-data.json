{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/notes/comparing-emacs-configurations","result":{"data":{"brainNote":{"slug":"comparing-emacs-configurations","title":"comparing-emacs-configurations","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"comparing-emacs-configurations\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I realized this evening, in my quest to source control my spacemacs config, that I'd never bothered to fully integrate all of the good little bits I had in my vanilla config. This is where I'll note the missing pieces. As a side note, I think that the only way I'm going to be able to properly source control .emacs.d is to fork the spacemacs repo. Then I introduce the issue of having to rebase from upstream from time to time, but hopefully that shouldn't be too bad. More reading is required.\"), mdx(\"p\", null, \"Differences:\"), mdx(\"p\", null, \"Yasnippet IEdit Semantic Company Matlab-mode Recompile keybind Ido Org-capture keybinds Really check all org config Do I really need all this stuff, I hardly ever use the agenda anymore Display time with date, format Counsel, Ivy, Swiper. Obviated by helm.\"), mdx(\"p\", null, \"That's it. On to ech piece here: Yasnippet is one of those packages that sounds really good in theory, but you never really end up using. Idk, it could be useful, but I never got in the swing of it. Maybe I'll give it another go here with C#.\"), mdx(\"p\", null, \"IEdit: what does this even do? It's emacs' version of multi-cursor. Also something that I don't use very often, it's sort of niche, but could be good to have around.\"), mdx(\"p\", null, \"Semantic: isn't this supposed to be code completion? I should take the time to learn/integrate a good intellisense type backend for spacemacs. Maybe there's already a slick layer to do so?\"), mdx(\"p\", null, \"Company: I think this is another autocomplete backend.\"), mdx(\"p\", null, \"Matlab-mode: don't care anymore, don't plan to ever use that shitty program ever again.\"), mdx(\"p\", null, \"Ido: This is a completion framework. Is it also obviated by Helm? Yes.\"), mdx(\"p\", null, \"Org stuff: I think I have most, if not all, of this captured already. This probably deserves the closest scrutiny, though.\"), mdx(\"p\", null, \"Display time with format: I have a good solution for this lying around somewhere\", \"\\u2026\"), mdx(\"p\", null, \"Okay, so todo list: investigate whether yasnippet is worth our time. Discriminate semantic and company (or even good ol autocomplete) and find one that works the most like intellisense. Also make sure to only turn auto-complete on for coding buffers. Autocomplete in prose is honestly nauseating. Double check org config. Done.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"comparing-emacs-configurations"}},"staticQueryHashes":[]}