{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/notes/dissertation-topic-ideas","result":{"data":{"brainNote":{"slug":"dissertation-topic-ideas","title":"dissertation-topic-ideas","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Seems I never got around to doing anything here. Obviously, I need to start fleshing out a list of ideas for the dissertation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/notes/jarvis\"\n  }), \"Jarvis\"), \" is one, although I don't think that it's a likely candidate to be accepted by Butcher or Rosengren.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"solutionBases is another idea I've had for a long time. I think this could be a really great application of machine learning, but it's hard to say without at least trying it. I should flesh this one out on its own as well.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Under Actuated Control in the general six degree of freedom problem is an interesting avenue to consider. A lot of the theoretical results that Butcher and others have published relies on full orthogonal control in both rotation and translation. How do controller results change if you remove some of those axes of control?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feasibility is another one that's super interesting. So much time is spent trying to find optimal solutions to a control/trajectory problem, only to find that the requested parameters lie in the infeasible region. How do we effectively, and efficiently, solve this problem a priori, before optimizing?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Optimization is another classic. There are so many good optimizers out there, but they're so expensive! Maybe an open source clone of one like SNOPT (if IPOPT doesn't already fit that bill), or Gurobi, can fit the bill? Especially if we leave it with a permissive license that allows use in embedded applications without forcing copy-left on the users.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tracking Filters is another hot topic that could be applicable. I was doing a lot of work toward the end of last year on metrics for filters. Maybe there are some interesting avenues to go down there, computationally, to improve the design and implementation experience?\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"202008171306-genetic-algorithms","slug":"202008171306-genetic-algorithms","childMdx":{"excerpt":"Genetic Algorithms are generally classified as one type of optimization solver. The idea is effectively to randomly select starting points…"}},{"title":"202008171309-simulated-annealing","slug":"202008171309-simulated-annealing","childMdx":{"excerpt":"Simulated Annealing is another global optimization strategy, and is actually quite similar to  202008171306 Genetic Algorithms . The core…"}},{"title":"current-projects","slug":"current-projects","childMdx":{"excerpt":"Top of the Stack GPGPU Productivity Data Structures Project Sortbenchmark Contest Noting Workflow Time to Spruce Up the Home Network On the…"}},{"title":"more-on-why-reinforcement-learning","slug":"more-on-why-reinforcement-learning","childMdx":{"excerpt":"Reinforcement Learning is a great toolset I spent some time sitting down with and getting to know Isak's recommendation: Barto and Sutton's…"}},{"title":"nonconfusing-index-name","slug":"nonconfusing-index-name","childMdx":{"excerpt":"This is the index card, the place where I can find jumping off points for all of my note trails. Noting Workflow Functional Programming…"}}],"outboundReferenceNotes":[{"title":"jarvis","slug":"jarvis","childMdx":{"excerpt":"I think this is my most important idea to date, and the most promising project as well. I originally started the inklings of this project in…"}}]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"dissertation-topic-ideas"}},"staticQueryHashes":[]}