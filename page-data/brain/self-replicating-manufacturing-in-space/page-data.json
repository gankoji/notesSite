{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/brain/self-replicating-manufacturing-in-space","result":{"data":{"brainNote":{"slug":"self-replicating-manufacturing-in-space","title":"self-replicating-manufacturing-in-space","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"self-replicating-manufacturing-in-space\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This was such a good idea I really had to get it down into the slipbox. Look up Metzger's paper on an Off-Earth Supply Chain for reference/details. The key insight is that by having additive manufacturing and self-replicating technologies using the resources of the moon and eventually the asteroid belt, we could (after a couple generations of bootstrapping and replication) exceed the entire manufacturing capacity of the entire USA by more than 1,000,000 times. That's something like 40 years from now, with very conservative estimates on time per generation and manufacturing. \"), mdx(\"p\", null, \"This has major implications for the situation we find ourselves in with regards to energy consumption for manufacturing \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"and\"), \" computing. At current rates of growth, the amount of energy consumed just for computing will exceed the world's energy output by the year 2035. Even if we continue to make things smaller and more efficient, with a perfect computer (according to the physical limit of energy per bit of information), that would only delay this onslaught to 2050. \"), mdx(\"p\", null, \"So how do I get involved in this? We're going to need some heavy duty software to manage all that information, technological development, and manufacturing processes. \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"current-projects","slug":"current-projects","childMdx":{"excerpt":"Top of the Stack GPGPU Productivity Data Structures Project Sortbenchmark Contest Noting Workflow Time to Spruce Up the Home Network On theâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"self-replicating-manufacturing-in-space"}},"staticQueryHashes":[]}