{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/brain/20200625135018-keyboards","result":{"data":{"brainNote":{"slug":"20200625135018-keyboards","title":"20200625135018-keyboards","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"20200625135018-keyboards\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anyway, here I'll document my progress through the process of buying parts\\nfor, building, and using my own custom mechanical keyboards. This is a part of a more generalized computing hardware and computer peripherals. I'm always on a quest to improve the ergonomics of my setup.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On the subject of ergonomics, I've found that my current keebs aren't great\\nfor it. I have two Anne Pro 2s, one with kailh blues and another with kailh red switches. The 60% form factor is really nice, because I basically never have to move my hands away from the home row while in use.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"That said, I'm finding that the 60% combined is a bit too small to comfortably\\nfit both of my hands at while using the arm rests of either of my chairs. This leads to an awkward situation where I either have one hand on an armrest and the other hanging free, or I have to squat my chair down low to get under the desk, so my arms can both rest on the desk itself. Not great for posture.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"So, I've decided to go ahead and build new ones, of course! There were two\\nreally good options out of the same kit at keeb.io: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://keeb.io/collections/frontpage/products/nyquist-keyboard\"\n  }), \"Nyquist and Levinson\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Nyquist is a 5 row by 12 key, roughly 60%, ortholinear split. The Levinson\\nis almost identical, but you can break the bottom row of the PCB so that it's only 4 rows, effectively a 40% split.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The PCBs come with resistors, caps, LEDs and controllers already mounted and\\nsoldered, but I'll have to do quite a bit of soldering to get all the switches mounted. The \\\"cases\\\" are effectively laser cut FR4/Acrylic plates that go on after switch soldering. Should be a relatively straightforward build.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Both of these keebs use the same QMK firmware image, which should make\\ncustomization a snap, thanks to QMK's popularity.\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://qmk.fm/\"\n  }), \"QMK Firmware\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Last thing I need to figure out for now is how to add a timestamp to a note or\\nset of blocks.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nyquist I have finally gotten around to building this bad boy. It's quite\\ndifficult to use at the moment, as I've been using staggered keebs for so long that this ortho layout seems really strange to my hands.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"However, it is bearable, for the moment. My typing speed isn't actually\\nthat bad, it's just that I make a lot of mistakes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I wasn't able to completely replicate my Anne Pro 2 layout, as that keeb\\nhas 3 more keys. I did the best I could to make a faithful representation, though, and it's working okay for the time being.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"One small annoyance at the moment is that I don't have the exact keycap\\nsize for my 2u spacebars, so I'm using 1.25u Ctrl keys from a normal TKL set right now. Need to fix this soon.\")))));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"20200625135018-keyboards"}},"staticQueryHashes":[]}