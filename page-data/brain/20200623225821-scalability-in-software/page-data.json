{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/brain/20200623225821-scalability-in-software","result":{"data":{"brainNote":{"slug":"20200623225821-scalability-in-software","title":"20200623225821-scalability-in-software","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"20200623225821-scalability-in-software\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Original reference \\\"Software Engineering at Google\\\", by Titus Winters et al\"), mdx(\"p\", null, \"Google has become such a successfuly company in large part due to the way they handle engineering and DevOps/deployment. In their eyes, all of their processes need to be able to scale sublinearly with the number of users/engineers/computers/lines of code, etc, that they are responsible for dealing with. So not only do they have wonderful scalability in the data engine that drives Google search, maps, and others (which we would expect), but they have wonderful scalability in their build processes, their deployment and testing processes, the standards they use for coding, the tools they use to manage their infrastructure, automated code clean up tools, etc.\"), mdx(\"p\", null, \"Google, rightly, took the smart choice in the age old debate: what's more expensive in the long run, the engineer's time or more compute resources? In 99% of cases considered, the answer here has to be the engineer's time. Obviously, there's tradeoffs involved, and for projects that don't involve lots of code, lots of engineers, and/or aren't expected to live a long time (decades, like google search), the methods described in this book could rightly be seen as overkill. However, when that massive train finally gets moving in the right direction, it's a beautiful sight to behold.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"20200623225821-scalability-in-software"}},"staticQueryHashes":[]}