{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/brain/still-more-to-do-though","result":{"data":{"brainNote":{"slug":"still-more-to-do-though","title":"still-more-to-do-though","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"What's Left?\"), mdx(\"p\", null, \"The PiServer is at a great spot right now, but it's not quite all the way to where I'd like it to be. \"), mdx(\"h3\", null, \"Sync Setups\"), mdx(\"p\", null, \"This leads pretty directly into the next topic, but for sure at least we're going to get things like Amber's phone, and maybe the kids' schoolwork synched up with Resilio. This is all in the name of backups, which is the crucial issue here. \"), mdx(\"h3\", null, \"Backing Up Big Data\"), mdx(\"p\", null, \"My big concern is that I have sooo much data from the old raid, that right now is unprotected (no longer a raid), and I'm doing manual backups at a rough frequency of about every 6 months. Not good. So, I'd like to use this opportunity with the RPi to mitigate that. The question is, should I work my own solution with RSync? Or should I fall back on Resilio? I've wanted to use RSync because it's very easy to automate, and because it can do things like check file level hashes for duplicates, only syncing updates/deltas, etc, and thus can keep backups really nice and small. Resilio, on the other hand, makes it \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"ridiculously\"), \" easy to setup, and also does only updates/deltas once the full sync has passed. \"), mdx(\"h3\", null, \"Maybe a Hybrid Approach?\"), mdx(\"p\", null, \"What might be super interesting is to use RSync for an initial cleanup of the data, utilizing the file level hashing/dupe detection. One note though is that this 'dupe detection' includes, by default anyway, location/full path information. So if I have dupes across multiple folders (I for sure do), that's going to be more difficult to sort out. \"), mdx(\"h3\", null, \"Finally, to the Cloud\"), mdx(\"p\", null, \"The last bit I want to worry about with regards to backups is to get them up into an Azure storage account. The question remains as to whether I want the containers to be file shares, blob containers, or a mixture of both, and that's something I plan to sort out over the rest of the week. \"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/brain/pricing-cloud-resources\"\n  }), \"Pricing cloud resources\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"successful-deployment-1","slug":"successful-deployment-1","childMdx":{"excerpt":"The Pi-Hole Lives! Turns out that I'd forgotten just how easy linux can make your life sometimes. I set out today (and a little bit…"}}],"outboundReferenceNotes":[{"title":"pricing-cloud-resources","slug":"pricing-cloud-resources","childMdx":{"excerpt":"On Pricing Azure Files is $15/mo/TB, which isn't bad at all for cool tier storage as a backup file server. Transaction and metadata costs…"}}]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"still-more-to-do-though"}},"staticQueryHashes":[]}