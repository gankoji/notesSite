{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/notesSite/notes/getting-started-with-reinforcement-learning","result":{"data":{"brainNote":{"slug":"getting-started-with-reinforcement-learning","title":"getting-started-with-reinforcement-learning","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"getting-started-with-reinforcement-learning\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"Reinforcement%20Learning%20for%20Design\"\n  }), \"Reinforcement Learning for Design\")), mdx(\"p\", null, \"Following on to this idea, I came up with a great little scenario that will be simple enough to analyze efficiently, but complex enough to be interesting: That of an optimal nozzle/diffuser combination for a pipe with a choke at the center. It will be interesting to see what sort of fluid analysis that entails, and how open source solvers like OpenFOAM can handle it. It will also be interesting to see how I can generate different variations on the shape/geometry of the nozzle and diffuser, and use that as the input part of the feedback loop for the learning process.\"), mdx(\"p\", null, \"One thing I need to note here though is that aside from the name, I basically don't know what reinforcement learning is. So, I'll have to do a bit of digging on that topic as well.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"getting-started-with-reinforcement-learning"}},"staticQueryHashes":[]}