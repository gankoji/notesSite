{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/notesSite/notes/evergreen-notes-and-zettelkasten","result":{"data":{"brainNote":{"slug":"evergreen-notes-and-zettelkasten","title":"evergreen-notes-and-zettelkasten","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/notesSite/notes/the-knowledge-stack\"\n  }), \"The Knowledge Stack\"), \" follows on a good point that I've been worrying about for some time: the notes that I've built to this point aren't very useful! \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://notes.andymatuschak.org/About_these_notes?stackedNotes=z3SjnvsB5aR2ddsycyXofbYR7fCxo7RmKW2be&stackedNotes=z4SDCZQeRo4xFEQ8H4qrSqd68ucpgE6LU155C\"\n  }), \"Andy Matuschak's Notes\"), \" Describe the concept of Evergreen notes, and I find that wildly useful as a goal. I'm pursuing this Zettelkasten technique to make my time writing and working, later on down the line, easier. Thus, the notes should be simple, usable, and effective.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"the-zettelkasten-system","slug":"the-zettelkasten-system","childMdx":{"excerpt":"Sonke Ahrens, \"How to Take Smart Notes.\" The key to a good note taking or knowledge building system is simplicity and flexibility. We cannot…"}}],"outboundReferenceNotes":[{"title":"the-knowledge-stack","slug":"the-knowledge-stack","childMdx":{"excerpt":"The Knowledge Stack I think that the process I've used in the past more or less will work out just fine, with just a few adjustments…"}}]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"evergreen-notes-and-zettelkasten"}},"staticQueryHashes":[]}