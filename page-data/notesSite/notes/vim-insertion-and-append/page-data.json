{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/notesSite/notes/vim-insertion-and-append","result":{"data":{"brainNote":{"slug":"vim-insertion-and-append","title":"vim-insertion-and-append","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"TODO%20File\"\n  }), \"TodoFile\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"Background%20Tasks\"\n  }), \"BackgroundTasks\")), mdx(\"p\", null, \"Ok so A works to skip links, but not i. Looks like a standard vim-ism. I wonder why it does that? Is there a way to configure it better? Or am I stuck with it like this and just have to get used to using A anytime I want to append? This seems to be the case, and I think it's more a matter of me misunderstanding i vs a vs A in vim than a bug. A appends to the end of the line. a starts insert mode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"after\"), \" the current character. i starts insert mode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"before\"), \" the current character, or at point. Just little vim-isms I have to remember.\"), mdx(\"p\", null, \"(20200906) So I eventually figured this out. A appends at the end of the current line. i inserts \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"before\"), \" point. a inserts \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"after\"), \" point. Pretty simple once you realize it. I should probably spend a little more time getting more knowledge of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/notesSite/notes/vim\"\n  }), \"Vim\"), \". \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[],"outboundReferenceNotes":[{"title":"vim","slug":"vim","childMdx":{"excerpt":""}}]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"vim-insertion-and-append"}},"staticQueryHashes":[]}