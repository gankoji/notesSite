{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/notesSite/notes/finishing-pisort","result":{"data":{"brainNote":{"slug":"finishing-pisort","title":"finishing-pisort","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"finishing-pisort\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"As of 20200921, I have officially canned my intent to enter the SortBenchmark competition this year. There's not enough time left to finish the software project, and I don't have the necessary measurement equipment to even put in a run with someone else's sorting software. That's really unfortunate, but it is what it is. \"), mdx(\"p\", null, \"So what is left to do here? I'd like to clean this project up once and for all, put a bow on it, and move on. I think that in order to call this project a success, I need to have a working software implementation of external sorting via the GreedSort algorithm. That means I still have to solve the file pointer or many files issue. Given that I'm no longer necessarily stretching the limits of my storage devices, it might be easiest to just use separate files for the runs, as Umbrant does \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/umbrant/extsort\"\n  }), \"here\"), \". In fact, I'll probably draw an awful lot of inspiration from his management code, and save my decision making for the last few details of the GreedSort implementation. Gotta get working software though! Might even write a few tests, just for good measure. \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"coming-back-to-memory-mapping","slug":"coming-back-to-memory-mapping","childMdx":{"excerpt":"So, I've strayed from this topic for a few weeks, but I think it's time I picked it back up! We only have 9 days until the submissionâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"finishing-pisort"}},"staticQueryHashes":[]}