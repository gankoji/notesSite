{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/notesSite/notes/20200804131752-programming-languages-coursera","result":{"data":{"brainNote":{"slug":"20200804131752-programming-languages-coursera","title":"20200804131752-programming-languages-coursera","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"20200804131752-programming-languages-coursera\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"So, I've just about finished up taking this Coursera course, and I have to get my thoughts down on just how amazing of an experience it's been. There's \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"so much good material\"), \" in this course. It mostly takes you through the basics of functional programming, but spends a lot of time focusing very deeply on the concepts of functional languages, not just on the details of implementing code using those concepts. Recursion (and tail recursion, necessarily), immutable state, higher order functions like map, filter, and fold/reduce, static type checking vs dynamic typing, strong vs 'weak' typing, pattern matching and functional generics vs object oriented methods, templating, polymorphism, and way more. What was really awesome about this course was the depth to which we explored those concepts, rather than glossing over them as we rushed into details in using them in each of the languages we work with.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"20200804131752-programming-languages-coursera"}},"staticQueryHashes":[]}