{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\pypy-vs-cpython","result":{"data":{"brainNote":{"slug":"pypy-vs-cpython","title":"pypy-vs-cpython","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"pypy-vs-cpython\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Too Much Hype\"), mdx(\"p\", null, \"PyPy is an alternative python implementation that's supposed to be an average of 4 times faster than the standard CPython, which is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"really good\"), \". However, my experience with it just tonight left a lot to be desired. First, it cannot use all the packages you already have installed for CPython. Second, installing them is sort of a pain. Third, some of them don't even install! I'm stuck benchmarking it because it can't install Matplotlib. Useless for me, sadly. \"), mdx(\"p\", null, \"UPDATE: I went back and just commented out all the plotting code of my benchmark, and got it to work with PyPy. Turns out, that it's 5x SLOWER! Wow. Totally useless. Next!\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"pypy-vs-cpython"}},"staticQueryHashes":[]}