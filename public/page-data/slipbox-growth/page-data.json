{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/slipbox-growth","result":{"data":{"brainNote":{"slug":"slipbox-growth","title":"slipbox-growth","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"slipbox-growth\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"One interesting note from the rest of Ahrens' book that I breezed through last night was the concept of compounding interest. In normal writing, if we were to write, say, a paragraph or a page per day, then in so many years you'd end up with so many books or papers or dissertations. But, if you were to instead focus on meeting a metric of maybe three permanent notes in the slipbox per day, each with complete links and references to other notes, your knowedge base growth would be exponential. You'd continue to accumulate knowledge faster and faster!\"), mdx(\"p\", null, \"Of course, this ignores the actual complexity of getting the references right in the first place, which even with great linking at each and every note insertion, is more like an O(log n) operation than an O(1) operation. So really, the analysis looks more like this. \"), mdx(\"p\", null, \"Just writing m pages per period of time gives you linear knowledge/work growth, i.e. O(n). \"), mdx(\"p\", null, \"Writing in the slipbox form over n time periods, where each note is linked properly, goes something more like O(n^2/log n). We don't get quite quadratic growth, but it is superlinear. It's really quite nicely superlinear, and gets quite close to quadratic as time goes on. But we do have to watch out for the logarithmic complexity of linking. \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"the-zettelkasten-system","slug":"the-zettelkasten-system","childMdx":{"excerpt":"Sonke Ahrens, \"How to Take Smart Notes.\" The key to a good note taking or knowledge building system is simplicity and flexibility. We cannotâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"slipbox-growth"}},"staticQueryHashes":[]}