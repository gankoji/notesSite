{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\spacemacs-packages","result":{"data":{"brainNote":{"slug":"spacemacs-packages","title":"spacemacs-packages","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Spacemacs has a nice function near the end of the .spacemacs file \\\"dotspacemacs-additional-packages\\\" which lets you specify names of packages to draw down from MELP or other sources, and it makes sure they're installed on initialization. Good enough for these few that I'm using atm. Can't forget PDF tools in the morning though. I need a good way to have TODOs in the daylog.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Ccomparing-emacs-configurations\"\n  }), \"Comparing Emacs Configurations\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Cspacemacs-config-source-control\"\n  }), \"Spacemacs Config Source Control\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Cworking-as-if-writing-is-the-only-thing-that-matters\"\n  }), \"Working as if Writing is the Only Thing that Matters\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"resources-index","slug":"resources-index","childMdx":{"excerpt":"Spacemacs Packages \n Mobile Index \n Note Taking Techniques Index \n Racing Index \n Zettelkasten Index \n Computing Index Scheduling…"}}],"outboundReferenceNotes":[{"title":"comparing-emacs-configurations","slug":"comparing-emacs-configurations","childMdx":{"excerpt":"I realized this evening, in my quest to source control my spacemacs config, that I'd never bothered to fully integrate all of the good…"}},{"title":"spacemacs-config-source-control","slug":"spacemacs-config-source-control","childMdx":{"excerpt":"Tips from the gitter chat are basically to source control a separate directory, separate from ~/.emacs.d, and then symlink the source…"}},{"title":"working-as-if-writing-is-the-only-thing-that-matters","slug":"working-as-if-writing-is-the-only-thing-that-matters","childMdx":{"excerpt":"\"Work as if Writing is the Only Thing that Matters\"\n How to Take Smart Notes , by Sonke Ahrens. Perhaps the key thesis of the first 30% of…"}}]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"spacemacs-packages"}},"staticQueryHashes":[]}