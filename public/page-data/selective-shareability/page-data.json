{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/selective-shareability","result":{"data":{"brainNote":{"slug":"selective-shareability","title":"selective-shareability","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"selective-shareability\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Selectively Shareable Data\"), mdx(\"p\", null, \"One of the great struggles of modern personal computing (and hell, even business computing) is sharing data while maintaining good privacy and security. There are entire corporate IT armies and product/service offerings from consultants based around the mega software solutions to problems like these (looking at you, Active Directory and Kerberos). So, in the cloud era, of course this will still be a challenge, maybe even more so now that the front door to the data is exposed to the web at large in many cases. \"), mdx(\"h2\", null, \"Personal DataVaults aren't Immune\"), mdx(\"p\", null, \"Consumers of the PDV app concept are going to be of the same breed as those personal and business computing users above: I have data, I want it to be safe from unauthorized access, available, authentic, durable, etc. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"But\"), \", I also want to be able to seamlessly share pieces of that data with friends, family, colleagues, whoever, whenever, however I want. This is something you can't possibly hope to get right without designing it in from the ground up. Even then, it's going to be a major challenge. As usual, the choice comes down to 'how much of this do you want to do yourself?' There exist quite many solutions to this type of problem: Unix style FS perms (really all FS perms), AD, or more elaborate hosted server type solutions. I'm not really up to speed on what the cloud versions of these look like, but that's something I could stand to look into. \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"the-personal-datavault","slug":"the-personal-datavault","childMdx":{"excerpt":"The Data Problem I'm sure this is not a new problem in the world of computer science, but it seems to me that 80 years into this ordeal weâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"selective-shareability"}},"staticQueryHashes":[]}