{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\20200708142207-achievements","result":{"data":{"brainNote":{"slug":"20200708142207-achievements","title":"20200708142207-achievements","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"20200708142207-achievements\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"TrashNukem \", mdx(\"span\", {\n    className: \"timestamp-wrapper\"\n  }, mdx(\"span\", {\n    className: \"timestamp\"\n  }, \"<\", \"2020-07-08 Wed 14:22\", \">\"))), mdx(\"p\", null, \"Successfully architected, developed, tested, and deployed version 1 of the trashnukem concept in Teleport for automated garbage collection and resource usage reduction in response to critical loading of the production system.\"), mdx(\"h1\", null, \"TrashNukem v2\"), mdx(\"p\", null, \"Architected a highly scalable and efficient solution to the above problem as a longer term solution to fileshare quota management, which scales automatically to customer-driven system load.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"archived-schtuff","slug":"archived-schtuff","childMdx":{"excerpt":"This is the Boneyard Finishing PiSort \n The Notes Site Lives \n 202008161707 Emacs Lisp Project \n Data Structures \n Managing All My Disksâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"20200708142207-achievements"}},"staticQueryHashes":[]}