{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/the-cloud-is-complicated","result":{"data":{"brainNote":{"slug":"the-cloud-is-complicated","title":"the-cloud-is-complicated","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"the-cloud-is-complicated\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"The Cloud is Sorta Complicated\"), mdx(\"p\", null, \"This isn't true as a blanket statement. There are so many bits and pieces of 'the cloud', of course different bits from each vendor, which are so well oiled and slicked up to get you in the door that they're almost impossible to misuse. AWS EC2 comes to mind, as does Azure DB storage. However, those are usually setup with sane defaults on top of very complex architectures, meaning that as long as you stay 'on the beaten path,' you end up with an easy time. As soon as you need to deviate for any reason, you end up down in the weeds and dragging your entire team along with you. \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"prospects-in-monetization","slug":"prospects-in-monetization","childMdx":{"excerpt":"The Cloud is Complicated But Flexibility is the real Power! Bringing truly bespoke solutions to customers at scale is the real power of theâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"the-cloud-is-complicated"}},"staticQueryHashes":[]}