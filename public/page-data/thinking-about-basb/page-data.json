{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/thinking-about-basb","result":{"data":{"brainNote":{"slug":"thinking-about-basb","title":"thinking-about-basb","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"thinking-about-basb\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Getting Started: Concepts \"), mdx(\"p\", null, \"Building a second brain is an interesting methodology I've run across recently that I think I'm going to start employing. It borrows and builds upon much of the structure of the \\\"Getting Things Done\\\" methodology (see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hamberg.no/gtd/\"\n  }), \"https://hamberg.no/gtd/\"), \" for a good overview). It focuses most of its attention on the area of notes or references within GTD. Effectively, it's a system for capturing, organizing, and linking information that we acquire over time to make it more useful and actionable in the future.\"), mdx(\"p\", null, \"GTD is basically an effort to streamline the OODA loop for a modern day knowledge worker. The core philosophy is to maintain as much information as possible in a set of lists (in, next actions, waiting for, projects, and some day/maybe), and to focus our attention on actionable information/tasks. A large part of this organization program is in discriminating information as it comes in. The big question (Is it actionable?) decides whether a new piece of information makes it into the list at all, or is sidelined to be either discarded or turned into notes/references. If something is actionable, then it flows into the GTD system. If it isn't, then it flows into the BASB architecture. The overarching concept here is one of information management as a method of reducing stress and improving productivity: if we mange to wrangle the constant deluge of information on our psyche by either writing it down or discarding it, we can free up a significant portion of our brain power to focus on tasks at hand.\"), mdx(\"p\", null, \"Back to BASB: The key insight here is to have a tool workflow that allows efficient capture of concepts, fleshing out of notes in as many forms as possible (text, hyperlink, video, audio, handwriting, scanned paper, etc), and searching of notes. The creator of the system prefers Evernote as the main tool in doing so, and it's easy to see why: Evernote very easily handles any sort of content that you can throw at it, and makes things like searching pretty simple. That said, there are some drawbacks (particularly, subscription cost for the full-fat version). I've also read about using Emacs/Org-mode as a preprocessor/GTD manager, and I think it will fit in well to my workflow since I'm already so steeped in it. I do need to work out the step of transferring between org and Evernote.\"), mdx(\"p\", null, \"Another major point to getting this system off the ground is that these notes and lists need to be reviewed on a regular basis, or else they might go stale or unfinished, and thus diminish their value. I've set a first \\\"meeting\\\" notice for myself next week to review progress and see how far I've come. Hopefully I'll have something to show by then.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"thinking-about-basb"}},"staticQueryHashes":[]}