{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\exporting-onenote-notes","result":{"data":{"brainNote":{"slug":"exporting-onenote-notes","title":"exporting-onenote-notes","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"exporting-onenote-notes\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Man, is this a pain\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://itectec.com/superuser/how-to-export-all-onenote-pages-to-individual-markdown-files/\"\n  }), \"This site\"), \" is the best tutorial I've found yet on how to do this, but boy is it a giant pain in the ass. \"), mdx(\"p\", null, \"The process basically goes: export each section to a docx from onenote directly, then use pandoc to turn it into a markdown file, then do this hacky crap to hang on to the media files and split the big section markdown file into smaller page files, then figure out where to put the markdown files. There's a whole Joplin import issue at hand that I've yet to get smoothed out to my liking, but hey its progress, right?\"), mdx(\"p\", null, \"pandoc --extract-media='' --wrap=preserve '.\\\\journal.docx' -o journal.md\"), mdx(\"p\", null, \"mkdir journal/\\nmv media/ journal/\"), mdx(\"p\", null, \"csplit ./journal.md --keep-files --prefix='journal/journalentry ' --suffix-format='%i.md' --elide-empty-files '/^\", \"(\", \"Monday\", \"|\", \"Tuesday\", \"|\", \"Wednesday\", \"|\", \"Thursday\", \"|\", \"Friday\", \"|\", \"Saturday\", \"|\", \"Sunday\", \")\", \",/-2' '{*}'\"), mdx(\"p\", null, \"Looks like it worked well enough, though, so I'm going to call this part of the project done. Next step is to get the same level of granularity in the evernote export, and then we get to do the slog of combining the two notebooks and deduping. \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"note-taking-techniques-index","slug":"note-taking-techniques-index","childMdx":{"excerpt":"Ahrens Quote Ch 8 \n Considering Roam \n Evergreen Notes and Zettelkasten \n Evernote \n Exporting OneNote Notes \n First Notes Review Jan 202â€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"exporting-onenote-notes"}},"staticQueryHashes":[]}