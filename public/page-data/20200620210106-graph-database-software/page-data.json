{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\20200620210106-graph-database-software","result":{"data":{"brainNote":{"slug":"20200620210106-graph-database-software","title":"20200620210106-graph-database-software","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"20200620210106-graph-database-software\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Graph Database Products Thursday, June 4, 2020 12:57 PM\"), mdx(\"p\", null, \"Trying out the desktop and community server versions of Neo4j's graph database. I think this might be the ticket that I need to properly power the notes app, but I worry that it will be inefficient for small notes databases, which \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"everyone\"), \" is going to have when they first open up the app. We'll see what sort of resources each edition uses, and what sort of performance tradeoffs we're eventually going to have to make if we go down this path.\"), mdx(\"p\", null, \"Jake Bailey at 6/4/2020 11:14 PM: After a fair bit of reading today on the whole concept of a graph database (which I suspect, actually, is fundamentally nearly identical to the data structures I arrived at in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"onenote:#Data%20Structures&section-id=%7B086011DE-FBB1-4F56-8DF6-CB00BE2C0C7E%7D&page-id=%7BA0DBA8D8-2D6D-495C-9DB9-2F7480D49FBE%7D&end&base-path=%3Chttps://d.docs.live.net/1bcae9ccd363f222/Documents/Jake%27s%20Notebook/NotingMindmap%20app.one%3E\"\n  }), \"Data Structures\"), \"), I discovered one slight disappointment with Neo4j (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://neo4j.com/\"\n  }), \"https://neo4j.com/\"), \"): it is a JVM only database. I'm fairly certain that that bit prevents it from being used in an embedded fashion with Node.js apps. However, we can still run it in server mode, and simply connect to it on localhost through http. Not ideal, but it gets the job done. Interestingly, though, that does mean that it could theoretically be embedded into a Clojure app, if someone were brazen enough to do so.\"), mdx(\"p\", null, \"I also found an alternative: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://orientdb.com/\"\n  }), \"https://orientdb.com/\"), \". Unfortunately, it seems that it also is designed to be used with the JVM. They mostly advertise JDBC bindings. I thought this product was interesting because it's a multimode NoSQL DB, having both graph and document models available.\"), mdx(\"p\", null, \"A late comer to my search game is ArangoDB: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.arangodb.com/docs/stable/drivers/\"\n  }), \"https://www.arangodb.com/docs/stable/drivers/\"), \". They have drivers and integrations available for Java, Javascript, PHP, and Go, as well as integrations for Spark. Even looks like there's community built drivers for .NET, Python, and Ruby! I'll have to dig into this one in the morning, this might be the silver bullet. If not, I can always fall back on one of the other two in server mode, since Node apps understand http pretty deeply and easily.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"machine-learning","slug":"machine-learning","childMdx":{"excerpt":"20200623000810-machine_learning_and_functional_programming \n 20200625135058-knowledge_machines \n 20200620155304-text_search_methods \n Graphsâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"20200620210106-graph-database-software"}},"staticQueryHashes":[]}