{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/the-knowledge-stack","result":{"data":{"brainNote":{"slug":"the-knowledge-stack","title":"the-knowledge-stack","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"the-knowledge-stack\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"The Knowledge Stack\"), mdx(\"p\", null, \"I think that the process I've used in the past more or less will work out just fine, with just a few adjustments: OneNote will remain my mobile and tablet noting app of choice, since it's sync is really useful. It also has the whole web clipping deal, which is nice when I just need to clean up a workspace and move on to the next task, but want to save some state. Org-roam for the slip box, OneNote on phone and tablet for immediate notes, paper and pen when that doesn't suffice. The next thing I need to do is set aside some time every day to review my immediate notes, and turn them into slips. I think this is an ideal candidate for a beginning of the day routine.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"evergreen-notes-and-zettelkasten","slug":"evergreen-notes-and-zettelkasten","childMdx":{"excerpt":"The Knowledge Stack  follows on a good point that I've been worrying about for some time: the notes that I've built to this point aren't…"}},{"title":"notetaking-apps","slug":"notetaking-apps","childMdx":{"excerpt":"Everytime I try to do something with note taking apps like OneNote or Evernote, I'm reminded of just how awful they are. They're trying to…"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"the-knowledge-stack"}},"staticQueryHashes":[]}