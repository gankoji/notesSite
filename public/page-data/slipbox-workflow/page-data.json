{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\slipbox-workflow","result":{"data":{"brainNote":{"slug":"slipbox-workflow","title":"slipbox-workflow","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"slipbox-workflow\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"From \\\"How to Take Smart Notes\\\" by Sonke Ahrens\"), mdx(\"p\", null, \"\\\"The workflow around the slip-box is not a prescription that tells you what to do at what stage of writing. One the contrary: it gives you a structure of clearly separable tasks, which can be completed within reasonable time and provides you with instant feedback through interconnected writing tasks.\\\"\"), mdx(\"p\", null, \"The need for quick feedback cycles is the key insight here: feedback is what enables us to change course, or strengthen the resolve for the course we're on. It's far too valuable to relegate to the frequency of once every few months.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"Six%20Pieces%20for%20Effective%20Writing\"\n  }), \"Six Pieces for Effective Writing\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"The%20Zeignarik%20Effect\"\n  }), \"The Zeignarik Effect\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"Information%20Helps%20Learning\"\n  }), \"InformationHelpsLearning\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"Closure\"\n  }), \"Closure\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"zettelkasten-index","slug":"zettelkasten-index","childMdx":{"excerpt":"Indexing The Slipbox \n No Organization Necessary \n Notes on Zettelkasten Linking \n Slipbox Growth \n Slipbox Workflow \n The Zettelkastenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"slipbox-workflow"}},"staticQueryHashes":[]}