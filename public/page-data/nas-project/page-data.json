{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/nas-project","result":{"data":{"brainNote":{"slug":"nas-project","title":"nas-project","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"nas-project\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Improving Upon the PiNAS\"), mdx(\"p\", null, \"While the current PiNAS is great and has all sorts of cloud interop (and more to come!), it's not perfect. For one, we're limited in storage space (one drive only) as well as bandwidth (USB 3.0 vs SATA/PCI), and maybe even network (wifi ac? g? n?). Ideally, we'll get things setup a bit better in the future. Just for reference, the RPi wifi setup leaves a little to be desired. It's 802.11ac, but only capable of about 100 Mbit/s (Gigabit Ethernet, though). \"), mdx(\"h3\", null, \"Reusing real server hardware\"), mdx(\"p\", null, \"Need to revive the old CEI server. IIRC it has a reasonably good Xeon processor and some decent memory. I wonder whether its memory capacity is sufficient for this intended application, but that's more than likely upgradeable pretty easily. \"), mdx(\"p\", null, \"There is also the old BuffaloNAS rackmount job. I wonder if that's of any use here? We can obviously setup an arbitrary RAID here, but what's its bandwidth like? I don't remember it being particularly good, and I know for sure it doesn't have any sort of cache capability. It's probably a stinker on memory too. \"), mdx(\"h4\", null, \"Evaluating TrueNAS vs OpenMediaVault\"), mdx(\"p\", null, \"OpenMediaVault is fully open and easier to work with, but it's linux (Debian) based and doesn't include OpenZFS, which is one of the major attractions of using good hardware for the file server. Also, TrueNAS is supposedly open-source (need to find that source), and it's based on FreeBSD. Would be pretty cool to have another FreeBSD box around, and investigate what development is like in that environment. \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"the-next-stop-on-the-ladder","slug":"the-next-stop-on-the-ladder","childMdx":{"excerpt":"What to do with all these devices? Backup Is Top Priority No matter what, I need to have some sort of external device to which I canâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"nas-project"}},"staticQueryHashes":[]}