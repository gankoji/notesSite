{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\self-stabilization-dolev","result":{"data":{"brainNote":{"slug":"self-stabilization-dolev","title":"self-stabilization-dolev","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"A Bit Hard to Pin Down\"), mdx(\"p\", null, \"This text still has me a bit puzzled as to what the whole point of it is. It seems a bit niche, like it's going to focus solely on a single aspect of distributed systems and computations, but that could just be that I'm not familiar enough with the field to understand that this is a foundational portion of it and it's worth spending this sort of time to understand. \"), mdx(\"p\", null, \"As is sort of obvious from the title, the subject matter is on algorithms, computations, and/or systems that are \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"self-stabilizing\"), \", i.e. robust to failure, anomaly, initial conditions, and any other sort of off-nominal conditions you can throw at them. Super attractive, especially when you consider how fascinated I was by the papers on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Cmapreduce\"\n  }), \"MapReduce\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Cbigtable\"\n  }), \"BigTable\"), \" from Google, especially with the infrastructure on which they built these foundational technologies for the internet. \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"my-research-reading","slug":"my-research-reading","childMdx":{"excerpt":"Books I'm Considering, By Topic Virtual Machines, Language Design GPGPU Productivity Virtual Machines, Craig The Garbage Collection Handbookâ€¦"}}],"outboundReferenceNotes":[{"title":"mapreduce","slug":"mapreduce","childMdx":{"excerpt":""}},{"title":"bigtable","slug":"bigtable","childMdx":{"excerpt":""}}]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"self-stabilization-dolev"}},"staticQueryHashes":[]}