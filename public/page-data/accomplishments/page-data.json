{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\accomplishments","result":{"data":{"brainNote":{"slug":"accomplishments","title":"accomplishments","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"2020:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/gankoji/pisort\"\n  }), \"PiSort\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/gankoji/datastructures\"\n  }), \"DataStructures\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Submission reviewer/referee? for the Journal of Algorithms and Computational Technology. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hackintosh was a thing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated backups to the cloud with Python. Working on the same in Clojure: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"%5Cclojurebackup\"\n  }), \"ClojureBackup\"), \". \")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"thinking-about-accomplishments","slug":"thinking-about-accomplishments","childMdx":{"excerpt":"Today, I want to do a little organization and housekeeping. About to have my first PR merged and get my first bit of code live in a…"}}],"outboundReferenceNotes":[{"title":"clojurebackup","slug":"clojurebackup","childMdx":{"excerpt":"Moving the Script to Clojure Why? Well, frankly, because I can and I want to. We have a working-ish python version that's single threaded…"}}]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"accomplishments"}},"staticQueryHashes":[]}