{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\virtual-machines-craig","result":{"data":{"brainNote":{"slug":"virtual-machines-craig","title":"virtual-machines-craig","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"virtual-machines-craig\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"A Classic Springer Text\"), mdx(\"p\", null, \"I felt comfortable with this text immediately, largely because it's a Springer text and their layout and such is so familiar to me now that it's a bit scary! I chose this as my go-to text on the subject of virtual machines largely because he covers a lot of detail about the design of VMs for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"all\"), \" of the purposes they're used today (e.g. both OS level VMs and language VMs, like .NET CLR or JVM), and it's another broad, general background level text with foundational results that can be useful to build intuition for further research. \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"my-research-reading","slug":"my-research-reading","childMdx":{"excerpt":"Books I'm Considering, By Topic Virtual Machines, Language Design GPGPU Productivity Virtual Machines, Craig The Garbage Collection Handbookâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"virtual-machines-craig"}},"staticQueryHashes":[]}