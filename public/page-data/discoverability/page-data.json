{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\discoverability","result":{"data":{"brainNote":{"slug":"discoverability","title":"discoverability","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"discoverability\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Discoverability in Large Datasets\"), mdx(\"p\", null, \"One of the tragedies of modern computing is that we've amassed \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"so much freaking data\"), \" that most of it goes untouched, never getting to fulfill its intended purpose (which could be a reminiscence, a spark of inspiration, or really anything else). If data aren't \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"discoverable\"), \", then serendipity never happens. This principle of discoverability is somewhat orthogonal to what I'll call \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"findability\"), \" (I'm sure there's a better word), where we're looking for a specific object (search methods abound for this problem). I think a major selling point for this type of application could be in the methods it presents to users to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"discover\"), \" the data already present in the database. \"), mdx(\"h3\", null, \"Suggestion Engines\"), mdx(\"p\", null, \"I was reading an interesting blog post/essay from Reddit the other day, on a suggestion engine someone had written almost completely in Clojure. It was cool from a code and architecture standpoint, especially since he had done the actual recommendations portion in Python to access some specific ML libraries. Obviously, this is a hot topic in machine learning at the moment, since the big tech companies are constantly looking for ways to encourage users to stay on their platforms, via serendipity of discovery. To be quite frank, they do such a good job at it that it's a little unnerving. There has to be tons of research about this particular subject, and plenty of implementation guides and libraries out there to make it happen. We don't need to reinvent the wheel here, just take advantage of whatever is close enough to the state of the art that it's worth bring in. Might want to really think about modularity of the overall app, particularly with respect to this aspect, so we can easily iterate/changeout recommenders as tastes change and research progresses. \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"the-personal-datavault","slug":"the-personal-datavault","childMdx":{"excerpt":"The Data Problem I'm sure this is not a new problem in the world of computer science, but it seems to me that 80 years into this ordeal weâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"discoverability"}},"staticQueryHashes":[]}