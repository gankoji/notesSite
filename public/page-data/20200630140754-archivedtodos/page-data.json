{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\20200630140754-archivedtodos","result":{"data":{"brainNote":{"slug":"20200630140754-archivedtodos","title":"20200630140754-archivedtodos","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"20200630140754-archivedtodos\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"DONE Ingest immediate notes from the other night.\"), mdx(\"h1\", null, \"DONE Create Outlook Rules\"), mdx(\"h1\", null, \"DONE Add org-ref to spacemacs\"), mdx(\"h1\", null, \"DONE More testing for trashman     :ARCHIVE:\"), mdx(\"h1\", null, \"DONE Write short tutorial for deployment of Trashman in the ENB\"), mdx(\"h1\", null, \"DONE Finish updates for PR\"), mdx(\"h1\", null, \"DONE Request AME and GME card\"), mdx(\"h1\", null, \"DONE Get decision on language for AzFunctions version\"), mdx(\"h1\", null, \"DONE PBI for table config sync LS->HS.\"), mdx(\"span\", {\n    className: \"timestamp-wrapper\"\n  }, mdx(\"span\", {\n    className: \"timestamp\"\n  }, \"<2020-07-08 Wed 14:18> \")), \" This is indeed what I described above. It depends on me having either AME or GME credentials (cards) and a SAW to get into a production environment and configure the flows to replicate our configuration tables between LS and HS.\", mdx(\"h1\", null, \"DONE Login to Ex?\"), mdx(\"h1\", null, \"DONE Prototype AzFuncs TrashNukem\"), mdx(\"h1\", null, \"DONE Setup/Login to SAW\"), mdx(\"h1\", null, \"DONE Programming Languages, Part B HW 5\"), mdx(\"h1\", null, \"DONE HW6, HW7, Math 522\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"archived-schtuff","slug":"archived-schtuff","childMdx":{"excerpt":"This is the Boneyard Finishing PiSort \n The Notes Site Lives \n 202008161707 Emacs Lisp Project \n Data Structures \n Managing All My Disksâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"20200630140754-archivedtodos"}},"staticQueryHashes":[]}