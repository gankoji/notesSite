{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\todos-over-the-holidays-2020","result":{"data":{"brainNote":{"slug":"todos-over-the-holidays-2020","title":"todos-over-the-holidays-2020","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"TBD\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"OBE I haven't actually been able to sync data from the desktop to the PiNAS for a long time now, and I should fix that. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DONE I guess this is kinda crucial overall. Think about deployment everywhere. How can I make my life easier by automating deployments on everything I do? Also see \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"%5Cclojure-deployment\"\n  }), \"Clojure Deployment\"), \", and I'm sure a few others. This is a hot button issue for me atm. \")), mdx(\"h2\", null, \"Already Done\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DONE. I don't have the PiVPN connection setup. That's just silly. Do it everywhere! This macbook and the windows side of the desktop. Might take some extra configuration to get it to switch between MSFTVPN and PiVPN. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DONE. Clojure dev environment setup on the windows box\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DONE Work on the directory tree walk problem. This is useful for more than just deleting empty folders, some more notes on that from today's thinking should go in the project file. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DONE Rethink VSCode as a Clojure IDE on Mac. The experience isn't great so far. Can I adjust it to be better? Do I just need to get more used to working with a REPL again? Is emacs the answer? I hope not, it runs like shit on Mac. IntellJ IDEA seems like a good option, but I've never really taken the time to get used to their IDEs. Maybe it's time I did. If I end up liking it, maybe I'll even get used to Rider for C#...\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DONE. See \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"%5Cclojure-deployment\"\n  }), \"Clojure Deployment\"), \". Think about Clojure microservices. Really, just think about how the hell you deploy code from Clojure. A repl is neat and all, but is it really that useful if it requires someone downloading the entire dev stack to run your programs?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is actually low-key a great entrance into the world of Java, since Clojure compiles down to JAR files at the end of the day. Get to learn their build and distribution systems, kinda leads into containers and orchestrators, etc. \")))));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"a-moot-point","slug":"a-moot-point","childMdx":{"excerpt":"Well, this is interesting and all, but I just came to the realization that you can now specify 'cool' storage for file shares in Azure…"}},{"title":"home-office-workflow","slug":"home-office-workflow","childMdx":{"excerpt":"Post-Macbook, 1 Week Later 20201219: I love this macbook. The keyboard is really nice, the screen is absolutely amazing (albeit a funky…"}}],"outboundReferenceNotes":[{"title":"clojure-deployment","slug":"clojure-deployment","childMdx":{"excerpt":"Getting this Code Running RIght now, the way to run this project is simply 'lein run' from the command line. That's not a great experience…"}}]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"todos-over-the-holidays-2020"}},"staticQueryHashes":[]}