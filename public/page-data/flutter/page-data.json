{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/flutter","result":{"data":{"brainNote":{"slug":"flutter","title":"flutter","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"flutter\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Flutter seems like a great place to start, if their marketing is to be believed. It seems a little too good to be true, and a little bit like putting the cart before the horse, like when folks say they wanna learn react before knowing javascript. That said, I already know javascript, java, C++, and a few others, so maybe this isn't that big of a deal.\"), mdx(\"p\", null, \"After watching a few videos on it, I was pretty jazzed. Then I watched a little bit more from Techlead offering some perspective on these hybrid-native technologies (Flutter and React Native, in particular) and could really see the other side of the argument. One key factor is that performance is never going to be as good with a hybrid tech as it would be with native code, which is a strong counter to the 'one codebase' argument in favor. The second is that if you really want to get into mobile development, the big companies with the high budget jobs are looking for folks with native skills, not hybrid framework skills. Since I mostly want to align this new development path with generating more marketable skills for myself, I think that's the real nail in the coffin. I guess I'm going to have to get good at Kotlin, Object-C, and Swift? oof. \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"android-app-development","slug":"android-app-development","childMdx":{"excerpt":"After a good bit of research earlier this weekend, I found that there's really only three natively supported choices for app development onâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"flutter"}},"staticQueryHashes":[]}