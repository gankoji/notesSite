{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/jakenotes-design","result":{"data":{"brainNote":{"slug":"jakenotes-design","title":"jakenotes-design","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"The Endgame, First\"), mdx(\"p\", null, \"To call this project done, here are the things I would \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"tentatively\"), \" like to have. This list may be changed at any time, for any reason, and it is in no particular order of preference:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic To-Do and Notetaking functionality\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Text editing for input\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Checkboxes that are checkable\\t\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nesting Lists\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bold/Italics/Highlighting for emphasis\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Camera Integration for note capture\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"GPS/Nav integration for geostamping photos \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"and\"), \" notes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pen support\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic sync support \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Integration with existing technologies (iCloud, OneDrive, Dropbox, GoogleDrive, etc) would be best upfront. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Very interesting \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/prospects-in-monetization\"\n  }), \"Prospects in Monetization\"), \" in developing our own custom solution built on azure or other cloud IaaS resources.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sync across multiple platforms (android/ios/pc/mac/linux)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ML feature use\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Auto-tagging seems like a cool thing to do. What about auto-image processing, maybe compression or the like? \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Audio capture for voice notes\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Same applies for ML feature use here. \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Maybe the inklings of a 'secure notes vault' type ordeal, where we use biometrics to secure notes behind a wall of encryption. \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How does this interplay with the goal of 'permanent' notes, which have to be in a format that's readable outside of the app? Do we just have to use existing FOSS tools to do the encryption and make it available outside of the app? \")))));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"the-jakenotes-app","slug":"the-jakenotes-app","childMdx":{"excerpt":"A Notetaker, Then I've noted on the inner working of a note taking app like Roam, Obsidian, and others before, starting with  Data…"}}],"outboundReferenceNotes":[{"title":"prospects-in-monetization","slug":"prospects-in-monetization","childMdx":{"excerpt":"The Cloud is Complicated But Flexibility is the real Power! Bringing truly bespoke solutions to customers at scale is the real power of the…"}}]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"jakenotes-design"}},"staticQueryHashes":[]}