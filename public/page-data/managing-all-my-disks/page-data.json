{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\managing-all-my-disks","result":{"data":{"brainNote":{"slug":"managing-all-my-disks","title":"managing-all-my-disks","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Too Many Disks!\"), mdx(\"p\", null, \"This is a constant problem for me, although it's not a bad one to have. The issue is that I have so many disks lying around here in various states of backup or use and such, and it's hard to keep track of them all all the time. I'd like to figure out a neat solution that lets me utilize them more fully. This will go on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Ccurrent-projects\"\n  }), \"Current Projects\"), \" list now that \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Cclojurebackup\"\n  }), \"ClojureBackup\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Cthe-homebackup-project\"\n  }), \"The HomeBackup Project\"), \" have been rendered \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Ca-moot-point\"\n  }), \"A Moot Point\"), \" by Azure Files and Rsync. \"), mdx(\"h2\", null, \"First Things First\"), mdx(\"p\", null, \"Actually make those projects listed above moot! Setup the files share and get Rsync working on that bad boy! Probably easiest to do immediately from the Pi, although getting the Desktop (linux and windoze) and the macbook setup to access the file share is also on the priority list. \"), mdx(\"h3\", null, \"While I'm Thinking About It...\"), mdx(\"p\", null, \"Why am I doing all of this in the first place? I already pay $14/year (which isn't terribly much, admittedly) to get 1TB of storage in OneDrive. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"All\"), \" of my stuff can very easily be fit into that little storage. Why don't I just move it all there, rather than keeping up this juggling game? Let's not waste a bunch of money and time working on this project anymore! Making the decision today (20201227) to simply move my RaidData over to the OneDrive folder, let that synchronization happen from the Pi, and move on. \"), mdx(\"h2\", null, \"Next, the External Drive Showdown\"), mdx(\"p\", null, \"I'm a sucker for these things. I don't know exactly how they get me to do it, but I've spent roughly $700 over the last 5 years on these drives. Granted, that's not much compared to the rest of the hardware I have lying around here, but it is quite a bit. I currently have 4 external drives: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4 TB WD Elements USB 3.0 (HDD)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4 TB Seagate Expansion USB 2.0 (HDD, needs external power)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2 TB Seagate USB 3.0 (HDD)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2 TB Samsung USB 3.2 (SSD) w/ Fingerprint sensor\")), mdx(\"p\", null, \"Of these, the 4TB seagate is on the chopping block for getting tossed. If I then keep my Samsung job, I can give the other two away to the kids and be back down to one external drive. Not that they'd really do anything with external drives at this point, but I guess that's an option? Can I give them to someone else who'd use them more effectively? \"), mdx(\"h2\", null, \"After that, comes the Internal Drives\"), mdx(\"p\", null, \"This list is even \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"more ridiculous\"), \" because I'm a dumbass who loves the thought of storage. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1 TB Samsung 960 EVO NVMe - Desktop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1 TB Intel SSD - Desktop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2x 3 TB Seagate HDD - Desktop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2 TB Crucial SSD - RPi\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"512 GB Samsung 960 EVO NVMe - Scarlet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"480 GB Crucial? SSD - Nigel\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1 TB Intel 660p NVMe - Nigel's \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"game drive\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"512GB Apple SSD - Macbook\")), mdx(\"p\", null, \"For those of you keeping score at home, that's \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"9 Drives\")), \" across 5 devices, not even including the whatever-disks stuck in the server rack in my closet that haven't been spun up in years. This is also \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"not including any USB flash drives/thumbsticks or SD cards\"), \", of which there are many. I seem to have accumulated a problem here!\"), mdx(\"h1\", null, \"Okay, Problem is an Overstatement\"), mdx(\"p\", null, \"All I've really done is hang on to every drive that's still spinning/not corrupting data that I've gathered over the years. Clearly, it's simply time to let a few of them go, especially since most of them are either disused completely or only lightly loaded. Now, of course, I want to make sure I have plenty of room for my data to grow, which is why I'm not slimming things down completely, but I could do with probably about 40% of what I have. Obviously, Nigel's and Scarlet's drives stay where they are, and they maybe even inherit one each of the externals. But between the RPi and my two rigs, I have 10.5 TB of internal storage, and I'm currenlty only using about 10-15% of that. No need! For sure, one of my 3 TB jobs can just go to the bin. Well, maybe let's hang onto it in case the other one fails? I \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"am\"), \" using that one as overflow storage for lightly used games and such, so if it goes down it would be nice to have a backup. I can very safely throw out/give away three of the externals, though, and keep only the Samsung as a backup for my OneDrive (for on-the-go access with spotty wifi and such), and still have room for other stuff. I guess the real question is, how do I keep it and my actual cloud onedrive synced? Can I set the MacBook up like the Pi, moving my OneDrive folder to the external and forcing download of everything? Is that a good idea, considering I use the OneDrive data without wanting to have my damn external drive attached all the time? Idk, I'll have to think that one out a bit. \"), mdx(\"h1\", null, \"Here's the plan\"), mdx(\"p\", null, \"4 TB WD Elements to Nigel, show him how to back up.\\n2 TB Seagate to Scarlet, when I find it. Same there, setup backup for her.\\nToss 4 TB seagate after cleanse.\\nManual copy of OneDrive to Samsung? Setup cron job on RPi for it? Idk, we'll have to think that one through.\\nRemove ColdArchive from desktop rig. \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"a-moot-point","slug":"a-moot-point","childMdx":{"excerpt":"Well, this is interesting and all, but I just came to the realization that you can now specify 'cool' storage for file shares in Azure…"}},{"title":"archived-schtuff","slug":"archived-schtuff","childMdx":{"excerpt":"This is the Boneyard Finishing PiSort \n The Notes Site Lives \n 202008161707 Emacs Lisp Project \n Data Structures \n Managing All My Disks…"}}],"outboundReferenceNotes":[{"title":"current-projects","slug":"current-projects","childMdx":{"excerpt":"Top of the Stack GPGPU Productivity \n My New Pet Project \n Dissertation Topic Ideas On the Back Burner The Project Bike Archived Archived…"}},{"title":"clojurebackup","slug":"clojurebackup","childMdx":{"excerpt":"Moving the Script to Clojure Why? Well, frankly, because I can and I want to. We have a working-ish python version that's single threaded…"}},{"title":"the-homebackup-project","slug":"the-homebackup-project","childMdx":{"excerpt":"Backing Up Critical Data This is an offshoot of my  The Personal DataVault  project, really a first 'research-ish' step along the way to…"}},{"title":"a-moot-point","slug":"a-moot-point","childMdx":{"excerpt":"Well, this is interesting and all, but I just came to the realization that you can now specify 'cool' storage for file shares in Azure…"}}]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"managing-all-my-disks"}},"staticQueryHashes":[]}