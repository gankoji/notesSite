{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\the-homebackup-project","result":{"data":{"brainNote":{"slug":"the-homebackup-project","title":"the-homebackup-project","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Backing Up Critical Data\"), mdx(\"p\", null, \"This is an offshoot of my \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Cthe-personal-datavault\"\n  }), \"The Personal DataVault\"), \" project, really a first 'research-ish' step along the way to achieving that vision. The idea here is super simple: I have a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"metric ton\"), \" of personal data that I've kept around over the last decade and a half or so. Not really \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"that\"), \" much by size alone, as I've managed to pare it down from time to time and keep it to a 'reasonable' half terabyte. However, there are challenges to keep up with, even at such a reasonable size.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Cmanual-backups-are-not-a-strategy\"\n  }), \"Manual Backups are not a strategy\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Cfamily-data-is-too-important\"\n  }), \"Family data is too important\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Cautomating-the-boring-stuff\"\n  }), \"Automating the boring stuff\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Cconsidering-microservices\"\n  }), \"Considering Microservices\")), mdx(\"h1\", null, \"Scaling Out\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Cscaling-around-slow-uploads\"\n  }), \"Scaling Around Slow Uploads\")), mdx(\"h1\", null, \"Lateral Moves\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Cclojurebackup\"\n  }), \"ClojureBackup\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"archived-schtuff","slug":"archived-schtuff","childMdx":{"excerpt":"This is the Boneyard Finishing PiSort \n The Notes Site Lives \n 202008161707 Emacs Lisp Project \n Data Structures \n Managing All My Disks…"}},{"title":"making-architectural-decisions","slug":"making-architectural-decisions","childMdx":{"excerpt":"The HomeBackup Project Next, the architecture plan: Think through  Clojure Deployment . Figure out a convenient way to get this code up and…"}},{"title":"managing-all-my-disks","slug":"managing-all-my-disks","childMdx":{"excerpt":"Too Many Disks! This is a constant problem for me, although it's not a bad one to have. The issue is that I have so many disks lying around…"}},{"title":"the-stewart-platform-project","slug":"the-stewart-platform-project","childMdx":{"excerpt":"Going back to my roots Struggled a bit this week (20201231, end of 2020!) to come up with a new project, since  The HomeBackup Project  and…"}}],"outboundReferenceNotes":[{"title":"the-personal-datavault","slug":"the-personal-datavault","childMdx":{"excerpt":"The Data Problem I'm sure this is not a new problem in the world of computer science, but it seems to me that 80 years into this ordeal we…"}},{"title":"manual-backups-are-not-a-strategy","slug":"manual-backups-are-not-a-strategy","childMdx":{"excerpt":"Manual Backups are Not a Strategy Because, honestly, they never happen often enough. Looking back at my latest manual backups, I think the…"}},{"title":"family-data-is-too-important","slug":"family-data-is-too-important","childMdx":{"excerpt":"This Shouldn't Need Stating The simple fact is that there is some data, that while not often used/accessed, is too precious to lose. The 3D…"}},{"title":"automating-the-boring-stuff","slug":"automating-the-boring-stuff","childMdx":{"excerpt":"Make it Automatic Manual Backups are not a strategy  states the issue succinctly. So what's the solution? Well, to automate it, obviously…"}},{"title":"considering-microservices","slug":"considering-microservices","childMdx":{"excerpt":"20201212- Considering Microservices There are a lot of rough edges on my current implemenation of this capability. It's script based…"}},{"title":"scaling-around-slow-uploads","slug":"scaling-around-slow-uploads","childMdx":{"excerpt":"Upload bandwidth is limited For regularly scheduled  Data Synchronization  with the cloud, the big struggle is our upload speed. I can…"}},{"title":"clojurebackup","slug":"clojurebackup","childMdx":{"excerpt":"Moving the Script to Clojure Why? Well, frankly, because I can and I want to. We have a working-ish python version that's single threaded…"}}]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"the-homebackup-project"}},"staticQueryHashes":[]}