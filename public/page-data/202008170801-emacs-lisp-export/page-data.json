{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/202008170801-emacs-lisp-export","result":{"data":{"brainNote":{"slug":"202008170801-emacs-lisp-export","title":"202008170801-emacs-lisp-export","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"202008170801-emacs-lisp-export\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Requirements: No table of contents, fill-paragraph tokens (newlines) removed, exported to markdown. Easy peasy.\"), mdx(\"p\", null, \"Need to map a function over a list of file names within the slipbox directory. This function should:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open a file in buffer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add '#+OPTION: TOC nil' to the top of the file, after the #+TITLE directive\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set fill-column to a large number\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Select all text in buffer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Call 'fill-paragraph' to remove the auto-fill tokens\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Call 'org-export' non-interactively, with arguments to create a new markdown file.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Close the buffer\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"202008170801-emacs-lisp-export"}},"staticQueryHashes":[]}