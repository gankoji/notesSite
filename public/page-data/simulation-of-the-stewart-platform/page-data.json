{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\simulation-of-the-stewart-platform","result":{"data":{"brainNote":{"slug":"simulation-of-the-stewart-platform","title":"simulation-of-the-stewart-platform","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Let's Sim this guy\"), mdx(\"p\", null, \"See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"%5Carchitecting-the-simulation\"\n  }), \"Architecting the Simulation\"), \" for the experimentation phase on how we got to the design for this software. With any luck, this initial cut will be \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"super simple\"), \". The example I put together that uses Matplotlib to animate the double pendulum was about 100 lines! Scipy.odeint makes this process so much easier, it's almost trivial these days. \"), mdx(\"p\", null, \"The overall layout should look something like this: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"StewartDynamics.py\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Uses the Kane method, via SymPy, to generate the equations of motion for the platform. We use Lambdify, also from SymPy, to turn these symbolic equations of motion into Python computable functions, which can be imported into the main simulation. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Need to figure out parameterization (attachment locations, lengths, mass, etc). \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PlatformSimulation.py\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dependencies\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SciPy.Integrate\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NumPy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"H5Py\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Paraview\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic process: import StewartDynamics, generate the dynamics model for the simulation. Create the datastores, open the HDF file, set initial conditions and parameters, and then integrate over the requisite time period with ODEInt. Write data to file, print diagnostics, plot a few things if necessary, and we're done. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bonus points for functionizing the simulation process, with input parameters for initial condtions, mechanical and electrical hardware parameters, etc, so that we can run optimization searches on those spaces. \")))));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"the-stewart-platform-project","slug":"the-stewart-platform-project","childMdx":{"excerpt":"Going back to my roots Struggled a bit this week (20201231, end of 2020!) to come up with a new project, since  The HomeBackup Project  and…"}}],"outboundReferenceNotes":[{"title":"architecting-the-simulation","slug":"architecting-the-simulation","childMdx":{"excerpt":"Rehashing simWorld's Ideas Thinking it through, this would actually be the perfect time to bring simWorld back from the grave and repurpose…"}}]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"simulation-of-the-stewart-platform"}},"staticQueryHashes":[]}