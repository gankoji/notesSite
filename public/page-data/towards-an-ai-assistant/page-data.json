{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/\\towards-an-ai-assistant","result":{"data":{"brainNote":{"slug":"towards-an-ai-assistant","title":"towards-an-ai-assistant","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"towards-an-ai-assistant\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Let's start small. Architect the assistant and split it off into pieces that can be worked.\"), mdx(\"p\", null, \"One thing that just occurred to me: hasn't a lot of progress in this arena already been made by Google, Apple, and Microsoft (on assistant, siri, and cortan a respectively)? They've at least done a lot of the work on the interface. Maybe there's some work that can be leveraged there, although I'm not sure how much of any of those products is available in source forum. More research is needed. Would be pretty cool if I could just write a few \\\"plug-ins\\\" for an existing assistant AI instead of baking my own from scratch.\"), mdx(\"p\", null, \"Back to architecture. Things an assistant AI needs:\"), mdx(\"p\", null, \"User interface (text, voice, etc) Association of current tasks Recall/ideation Research/ingest/pattern recognition Training/feedback/weak supervision\"), mdx(\"p\", null, \"Looks like the Google assistant has a developer portal where they document an api for connecting to it from other apps, amongst other things:\\xA0\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developers.google.com/assistant\"\n  }), \"docs\"), \".\"), mdx(\"p\", null, \"Sirikit is a similar set of capability for Apple products and the Siri assistant:\\xA0\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.apple.com/siri/\"\n  }), \"docs\"), \".\"), mdx(\"p\", null, \"There are two other major players in this arena, Alexa and Cortana.\"), mdx(\"p\", null, \"Cortana dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.microsoft.com/en-us/cortana/\"\n  }), \"docs\")), mdx(\"p\", null, \"Alexa dev\\xA0\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.amazon.com/en-US/alexa/alexa-skills-kit/?sc_category=paid&sc_channel=SEM&sc_campaign=SEM-GO%5EBrand%5EAll%5ELD%5EProfessional_Developer%5EEvergreen%5EUS%5EEnglish%5EText&sc_publisher=GO&sc_content=content&sc_detail=379770706466&sc_funnel=convert&sc_country=US&sc_keyword=%2Bdevelopment%20%2Balexa&sc_place=&sc_trackingcode=b&sc_segment=development_bmm&sc_medium=paid%7CSEM%7CSEM-GO%5EBrand%5EAll%5ELD%5EProfessional_Developer%5EEvergreen%5EUS%5EEnglish%5EText%7CGO%7Ccontent%7C379770706466%7Cconvert%7CUS%7C%2Bdevelopment%20%2Balexa%7C%7Cb%7Cdevelopment_bmm&gclid=CjwKCAiAhc7yBRAdEiwAplGxXyLtNjijc2Jx21f61LAEXLTaXj5KDMY5MPxLtfaYrBulPSF_GhmcDxoChs4QAvD_BwE\"\n  }), \"docs\")), mdx(\"p\", null, \"Alexa is probably the tool best suited to take advantage of EC2, should the need for flexible computing resources arise. I wonder if I can get any of these to run locally tho, to allay privacy concerns. Does an AI assistant really need to be cloud based? Makes sense for the big companies to do it that way. Is the big data approach really necessary? What are thy getting out of the transaction by recording and logging user interaction data? Can I write my assistant as a plug in to theirs, and then share it? Data storage seems a big constraint.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"jarvis","slug":"jarvis","childMdx":{"excerpt":"I think this is my most important idea to date, and the most promising project as well. I originally started the inklings of this project in…"}},{"title":"nonconfusing-index-name","slug":"nonconfusing-index-name","childMdx":{"excerpt":"This is the index card, the place where I can find jumping off points for all of my note trails. Noting Workflow Functional Programming…"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Jake's Notes"}}},"pageContext":{"slug":"towards-an-ai-assistant"}},"staticQueryHashes":[]}